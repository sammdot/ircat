#!/usr/bin/python3

import socket
import sys

def error(err):
	sys.stderr.write(err + "\n")

def connect(host, port):
	sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	sock.settimeout(1800)
	try:
		sock.connect((host, port))
		return sock
	except socket.error as e:
		error(e)

def send(sock, msg):
	sock.sendall(bytes(msg + "\r\n", "UTF-8"))

def listen(sock, callback):
	f = sock.makefile("rb")
	while True:
		msg = f.readline().decode("utf-8", errors="ignore").rstrip("\r\n")
		parts = msg.split(" ")
		parts = parts[1:] if parts[0].startswith(":") else parts
		cmd = parts[0]
		if cmd == "PING":
			send(sock, "PONG " + parts[1])
		elif cmd == "ERROR":
			exit(0)
		elif cmd == "001":
			callback()

def cat(sock, chan, data):
	send(sock, "JOIN #{0}".format(chan))
	for line in data.splitlines():
		send(sock, "PRIVMSG #{0} :{1}".format(chan, line))
	send(sock, "QUIT :bye")

def main():
	if len(sys.argv) < 4 or len(sys.argv) > 5:
		error("Not enough arguments")
		error("Usage: ircat <host> <port> <channel> [nick]")
		exit(1)
	host, port, channel, *rest = sys.argv[1:]
	nick = rest[0] if len(rest) else "IRCat"

	try:
		port = int(port)
	except ValueError:
		error("Invalid port number: " + port)
		exit(1)

	if channel.startswith("#"):
		channel = channel[1:]

	sock = connect(host, port)
	send(sock, "NICK " + nick)
	send(sock, "USER " + nick + " * * *")
	listen(sock, lambda: cat(sock, channel, sys.stdin.read()))

if __name__ == "__main__":
	main()
